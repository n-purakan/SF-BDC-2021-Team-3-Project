{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d3ca2349",
   "metadata": {},
   "outputs": [],
   "source": [
    "import twint\n",
    "import nest_asyncio\n",
    "import pandas as pd\n",
    "from datetime import timedelta\n",
    "import datetime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2ca699b8",
   "metadata": {},
   "outputs": [],
   "source": [
    "c = twint.Config()\n",
    "c.Store_object = True\n",
    "c.Pandas= True\n",
    "#c.Limit = 1000\n",
    "c.Search = \"astrazeneca OR pfizer OR moderna OR #astrazeneca OR #pfizer OR #moderna OR #astrazenecavaccine OR #pfizervaccine OR #modernavaccine\"\n",
    "c.Lang= 'en'\n",
    "c.Hide_output = True"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4de8231a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#setting up date parameters for tweet scrape procedure \n",
    "\n",
    "today = datetime.datetime.now()\n",
    "print(today)\n",
    "blocksize = 7 #Each block will aggregate tweets over a week \n",
    "maxnumberofdays = 457 #Number of days between February 24 2020 and May \n",
    "loopctr = maxnumberofdays/blocksize\n",
    "\n",
    "end_date = datetime.datetime(today.year, today.month, today.day) #Last day was day this program was run \n",
    "print(end_date)\n",
    "\n",
    "duration = timedelta(days=maxnumberofdays)\n",
    "period = timedelta(days=(blocksize-1), hours=23, minutes=59, seconds=59) #Upper boundary for last day of each week for data collection is 11:59pm\n",
    "\n",
    "beginday = end_date - duration\n",
    "\n",
    "endday = beginday + period"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "39a812a8",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#Collect data in one week chunks to avoid memory issues \n",
    "\n",
    "numberofblocks = 0\n",
    "blockctr=1\n",
    "while (numberofblocks < maxnumberofdays):\n",
    "    beginDayStr = beginday.strftime(\"%Y-%m-%d %H:%M:%S\")\n",
    "    endDayStr = endday.strftime(\"%Y-%m-%d %H:%M:%S\")\n",
    "    bDStr = beginday.strftime(\"%Y-%m-%d\")\n",
    "    eDStr = endday.strftime(\"%Y-%m-%d\")\n",
    "    print(beginDayStr)\n",
    "    print(endDayStr)\n",
    "    print(\"\\n\")\n",
    "    \n",
    "    c.Since = beginDayStr\n",
    "    c.Until = endDayStr\n",
    "    #nest_asyncio.apply()\n",
    "    twint.run.Search(c)\n",
    "    df = twint.storage.panda.Tweets_df\n",
    "    tweet_count = df.shape[0]+1\n",
    "    filename = \"/Users/nehapurakan/Desktop/TWEET SCRAPING/block{0}-t-{1}-{2}-{3}.csv\".format(blockctr,tweet_count,bDStr,eDStr)\n",
    "    print(\"tweet count: {0}\",tweet_count)\n",
    "    #print(df)\n",
    "    df.to_csv(filename, index = False)\n",
    "    #print(filename)\n",
    "    \n",
    "    #update variables\n",
    "    beginday += timedelta(days = (blocksize))\n",
    "    endday = beginday + period\n",
    "    numberofblocks+=blocksize\n",
    "    blockctr+=1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "99a2a9a1",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
